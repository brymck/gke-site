// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

package gkesite

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GreetingRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingRequest) Reset()         { *m = GreetingRequest{} }
func (m *GreetingRequest) String() string { return proto.CompactTextString(m) }
func (*GreetingRequest) ProtoMessage()    {}
func (*GreetingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{0}
}

func (m *GreetingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingRequest.Unmarshal(m, b)
}
func (m *GreetingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingRequest.Marshal(b, m, deterministic)
}
func (m *GreetingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingRequest.Merge(m, src)
}
func (m *GreetingRequest) XXX_Size() int {
	return xxx_messageInfo_GreetingRequest.Size(m)
}
func (m *GreetingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingRequest proto.InternalMessageInfo

func (m *GreetingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Greeting struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Greeting) Reset()         { *m = Greeting{} }
func (m *Greeting) String() string { return proto.CompactTextString(m) }
func (*Greeting) ProtoMessage()    {}
func (*Greeting) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{1}
}

func (m *Greeting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Greeting.Unmarshal(m, b)
}
func (m *Greeting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Greeting.Marshal(b, m, deterministic)
}
func (m *Greeting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Greeting.Merge(m, src)
}
func (m *Greeting) XXX_Size() int {
	return xxx_messageInfo_Greeting.Size(m)
}
func (m *Greeting) XXX_DiscardUnknown() {
	xxx_messageInfo_Greeting.DiscardUnknown(m)
}

var xxx_messageInfo_Greeting proto.InternalMessageInfo

func (m *Greeting) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SquareRequest struct {
	Number               float32  `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRequest) Reset()         { *m = SquareRequest{} }
func (m *SquareRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRequest) ProtoMessage()    {}
func (*SquareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{2}
}

func (m *SquareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRequest.Unmarshal(m, b)
}
func (m *SquareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRequest.Marshal(b, m, deterministic)
}
func (m *SquareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRequest.Merge(m, src)
}
func (m *SquareRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRequest.Size(m)
}
func (m *SquareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRequest proto.InternalMessageInfo

func (m *SquareRequest) GetNumber() float32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareResponse struct {
	Number               float32  `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareResponse) Reset()         { *m = SquareResponse{} }
func (m *SquareResponse) String() string { return proto.CompactTextString(m) }
func (*SquareResponse) ProtoMessage()    {}
func (*SquareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{3}
}

func (m *SquareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareResponse.Unmarshal(m, b)
}
func (m *SquareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareResponse.Marshal(b, m, deterministic)
}
func (m *SquareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareResponse.Merge(m, src)
}
func (m *SquareResponse) XXX_Size() int {
	return xxx_messageInfo_SquareResponse.Size(m)
}
func (m *SquareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareResponse proto.InternalMessageInfo

func (m *SquareResponse) GetNumber() float32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*GreetingRequest)(nil), "gkesite.GreetingRequest")
	proto.RegisterType((*Greeting)(nil), "gkesite.Greeting")
	proto.RegisterType((*SquareRequest)(nil), "gkesite.SquareRequest")
	proto.RegisterType((*SquareResponse)(nil), "gkesite.SquareResponse")
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor_ca53982754088a9d) }

var fileDescriptor_ca53982754088a9d = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x3d, 0x4f, 0x86, 0x30,
	0x1c, 0xc4, 0xc1, 0x18, 0x90, 0xbf, 0x6f, 0xb1, 0x03, 0x12, 0x26, 0xd3, 0x68, 0x64, 0x62, 0xc0,
	0xd5, 0xb8, 0xe2, 0x60, 0x62, 0x02, 0x9f, 0x00, 0xf4, 0x42, 0x88, 0xb4, 0x85, 0xb6, 0xf8, 0xf9,
	0x4d, 0x80, 0x6a, 0x7c, 0xc8, 0xb3, 0xf5, 0xae, 0xbf, 0x5e, 0xee, 0x4a, 0xf4, 0x09, 0xa1, 0xf2,
	0x51, 0x2b, 0xab, 0x58, 0xd8, 0x7d, 0xc1, 0xf4, 0x16, 0xfc, 0x81, 0xae, 0x4b, 0x0d, 0xd8, 0x5e,
	0x76, 0x15, 0xa6, 0x19, 0xc6, 0x32, 0x46, 0xa7, 0xb2, 0x11, 0x48, 0xfc, 0x3b, 0x3f, 0x8b, 0xaa,
	0xe5, 0xcc, 0xef, 0xe9, 0xcc, 0x61, 0x2c, 0xa1, 0x50, 0xc0, 0x98, 0xa6, 0x73, 0x88, 0x93, 0xfc,
	0x91, 0x2e, 0xeb, 0x69, 0x6e, 0x34, 0x5c, 0x54, 0x4c, 0x81, 0x9c, 0x45, 0x0b, 0xbd, 0x90, 0x27,
	0xd5, 0xa6, 0x78, 0x46, 0x57, 0x0e, 0x34, 0xa3, 0x92, 0x06, 0xc7, 0xc8, 0xe2, 0x8d, 0x2e, 0x5e,
	0x31, 0x0c, 0xaa, 0x86, 0xfe, 0xee, 0x3f, 0xc0, 0x9e, 0xe9, 0xbc, 0x84, 0xfd, 0xeb, 0x92, 0x6f,
	0x43, 0xf2, 0x83, 0x15, 0xe9, 0xcd, 0xee, 0x86, 0x7b, 0xc5, 0xbb, 0x2b, 0xe8, 0xe2, 0x5e, 0x28,
	0x2a, 0x61, 0x57, 0x8f, 0xc5, 0xbf, 0x4f, 0xfe, 0xad, 0x48, 0x6f, 0x77, 0xfe, 0x5a, 0x9a, 0x7b,
	0x6d, 0xb0, 0x7c, 0xe7, 0xd3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x28, 0x7b, 0xd0, 0x5c,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	GetGreeting(ctx context.Context, in *GreetingRequest, opts ...grpc.CallOption) (*Greeting, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) GetGreeting(ctx context.Context, in *GreetingRequest, opts ...grpc.CallOption) (*Greeting, error) {
	out := new(Greeting)
	err := c.cc.Invoke(ctx, "/gkesite.HelloService/GetGreeting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	GetGreeting(context.Context, *GreetingRequest) (*Greeting, error)
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_GetGreeting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).GetGreeting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gkesite.HelloService/GetGreeting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).GetGreeting(ctx, req.(*GreetingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gkesite.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGreeting",
			Handler:    _HelloService_GetGreeting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demo.proto",
}

// SquareServiceClient is the client API for SquareService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SquareServiceClient interface {
	GetSquare(ctx context.Context, in *SquareRequest, opts ...grpc.CallOption) (*SquareResponse, error)
}

type squareServiceClient struct {
	cc *grpc.ClientConn
}

func NewSquareServiceClient(cc *grpc.ClientConn) SquareServiceClient {
	return &squareServiceClient{cc}
}

func (c *squareServiceClient) GetSquare(ctx context.Context, in *SquareRequest, opts ...grpc.CallOption) (*SquareResponse, error) {
	out := new(SquareResponse)
	err := c.cc.Invoke(ctx, "/gkesite.SquareService/GetSquare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SquareServiceServer is the server API for SquareService service.
type SquareServiceServer interface {
	GetSquare(context.Context, *SquareRequest) (*SquareResponse, error)
}

func RegisterSquareServiceServer(s *grpc.Server, srv SquareServiceServer) {
	s.RegisterService(&_SquareService_serviceDesc, srv)
}

func _SquareService_GetSquare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SquareServiceServer).GetSquare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gkesite.SquareService/GetSquare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SquareServiceServer).GetSquare(ctx, req.(*SquareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SquareService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gkesite.SquareService",
	HandlerType: (*SquareServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSquare",
			Handler:    _SquareService_GetSquare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demo.proto",
}
